#!/usr/bin/env python

import sys

from tiddlyweb.config import config
from tiddlyweb.store import Store

from tiddlywebwiki import instance as twinstance
from tiddlywebplugins.imaker import Instance
from tiddlywebplugins.utils import get_store

def check_instance():
    """Create instance files if no instance already exists."""

# A reference to the current store.
    store = get_store(config)

# Check if there are any recipes in the store. If there are some
# do nothing, we already have an instance we don't want to change.
    try:
        if len(list(store.list_recipes())):
            return
    except Exception as exc:
        sys.stderr.write('failing to determine deployment status: %s\n'
                % exc)
        return

# Create the bags and recipes.
    instance = Instance('.', config)
    store_structure = getattr(twinstance, 'store_structure', {})
    instance._init_store(store_structure)

# Copy tiddlers from the configured pkgstores into the bags and
# recipes. This process brings in the necessary tiddlers for building
# a TiddlyWiki that can talk to the server.
    for package_name in config.get('instance_pkgstores', []):
        source_store = Store('tiddlywebplugins.pkgstore',
                {'package': package_name, 'read_only': True},
                {'tiddlyweb.config': config})
        for bag in source_store.list_bags():
            for tiddler in source_store.list_bag_tiddlers(bag):
                tiddler = source_store.get(tiddler)
                store.put(tiddler)

if __name__ == '__main__':
    check_instance()
